/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package recon;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;

/**
 *
 * @author gabor
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        FillListBox();
        FillSelectShort();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        SelectShort = new javax.swing.JComboBox();
        SelectServer = new javax.swing.JComboBox();
        Lservername = new javax.swing.JLabel();
        Fservername = new javax.swing.JTextField();
        Lurl = new javax.swing.JLabel();
        Furl = new javax.swing.JTextField();
        Lowner = new javax.swing.JLabel();
        Fowner = new javax.swing.JTextField();
        Lkey = new javax.swing.JLabel();
        Fkey = new javax.swing.JTextField();
        Ftype = new javax.swing.JTextField();
        Ltype = new javax.swing.JLabel();
        Lusers = new javax.swing.JLabel();
        Fusers = new javax.swing.JTextField();
        Forphan = new javax.swing.JTextField();
        Lorphan = new javax.swing.JLabel();
        Lcbn = new javax.swing.JLabel();
        Fcbn = new javax.swing.JTextField();
        Fpcbn = new javax.swing.JTextField();
        Lpcbn = new javax.swing.JLabel();
        Lerror = new javax.swing.JLabel();
        Lrecon = new javax.swing.JLabel();
        Frecon = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Ferror = new javax.swing.JTextArea();
        Lcname = new javax.swing.JLabel();
        Fcname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        ImpCust = new javax.swing.JMenuItem();
        ImpFailed = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        SelectShort.setModel(SelectShort.getModel());
        SelectShort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectShortActionPerformed(evt);
            }
        });

        SelectServer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        SelectServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectServerActionPerformed(evt);
            }
        });

        Lservername.setText("Servername");

        Fservername.setEditable(false);
        Fservername.setText("jTextField1");

        Lurl.setText("URL");

        Furl.setEditable(false);
        Furl.setText("jTextField1");

        Lowner.setText("Owner email");

        Fowner.setEditable(false);
        Fowner.setText("jTextField1");
        Fowner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FownerActionPerformed(evt);
            }
        });

        Lkey.setText("Key File");

        Fkey.setEditable(false);
        Fkey.setText("jTextField1");

        Ftype.setEditable(false);
        Ftype.setText("jTextField1");

        Ltype.setText("Type");

        Lusers.setText("Users");

        Fusers.setEditable(false);
        Fusers.setText("jTextField1");

        Forphan.setEditable(false);
        Forphan.setText("jTextField1");

        Lorphan.setText("Orphan users");

        Lcbn.setText("CBN");

        Fcbn.setEditable(false);
        Fcbn.setText("jTextField1");

        Fpcbn.setEditable(false);
        Fpcbn.setText("jTextField1");

        Lpcbn.setText("Priv CBN");

        Lerror.setText("Error msg.");

        Lrecon.setText("Last recon");

        Frecon.setEditable(false);
        Frecon.setText("jTextField1");

        Ferror.setEditable(false);
        Ferror.setColumns(20);
        Ferror.setLineWrap(true);
        Ferror.setRows(5);
        jScrollPane2.setViewportView(Ferror);

        Lcname.setText("Customer name");

        Fcname.setEditable(false);
        Fcname.setText("jTextField1");

        jLabel1.setText("Sysadmin");

        jLabel2.setText("Who is working on");

        jLabel3.setText("Change");

        jLabel4.setText("Solution");

        jLabel5.setText("Maximo Group");

        jLabel6.setText("Problem short description");

        jTextField1.setText("jTextField1");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextField2.setText("jTextField2");

        jTextField3.setText("jTextField3");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jMenu1.setText("File");

        ImpCust.setText("Import Customers");
        ImpCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImpCustActionPerformed(evt);
            }
        });
        jMenu1.add(ImpCust);

        ImpFailed.setText("Import Failed recon");
        ImpFailed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImpFailedActionPerformed(evt);
            }
        });
        jMenu1.add(ImpFailed);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Fcname)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Fcbn, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Lcbn)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                                    .addComponent(Lcname)
                                    .addComponent(Lerror)
                                    .addComponent(jScrollPane2)
                                    .addComponent(Lrecon)
                                    .addComponent(Frecon)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(SelectShort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SelectServer, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Fpcbn))
                                .addGap(0, 14, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 14, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Fkey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Lkey))
                                        .addGap(200, 200, 200))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Fservername, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Lservername)
                                            .addComponent(Lurl)
                                            .addComponent(Furl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(Lowner)
                                                    .addGap(80, 80, 80))
                                                .addComponent(Fowner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Forphan)
                                            .addComponent(Lorphan)
                                            .addComponent(Fusers)
                                            .addComponent(Lusers)
                                            .addComponent(Ftype)
                                            .addComponent(Ltype)))))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel6))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(10, 10, 10)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel1))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jTextField1)
                                    .addComponent(jTextField3)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Lpcbn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Fkey, Forphan, Fowner, Fservername, Ftype, Furl, Fusers});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(3, 3, 3)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(3, 3, 3)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(3, 3, 3)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(3, 3, 3)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addGap(6, 6, 6))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SelectServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SelectShort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Lcname)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Fcname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Lservername)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Fservername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Lurl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Furl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Lowner)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Fowner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Lerror)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Ltype)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Ftype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Lusers)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Fusers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Lorphan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Forphan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Lkey)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Fkey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Lrecon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Frecon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Lcbn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Fcbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(Fpcbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Lpcbn))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ImpCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImpCustActionPerformed
        
        int returnVal = jFileChooser1.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = jFileChooser1.getSelectedFile();
        String csvFile = file.getAbsolutePath();
          
          try (BufferedReader br = new BufferedReader(new FileReader(csvFile))) {
            String line;
            while ( (line=br.readLine()) != null)
            {
             String[] st = line.split(";"); 
             String sql;

             sql = "insert into customerlist values('"+st[0]+"','"+st[1]+"')";
             System.out.println(st[0] + st[1]);
             selectdb.write(sql);
            }
        }
            catch (IOException ex) {          
                Logger.getLogger(Recon.class.getName()).log(Level.SEVERE, null, ex);
            }          
        }

    }//GEN-LAST:event_ImpCustActionPerformed

    private void ImpFailedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImpFailedActionPerformed
        
        int returnVal = jFileChooser1.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = jFileChooser1.getSelectedFile();
        String csvFile = file.getAbsolutePath();
          
          try (BufferedReader br = new BufferedReader(new FileReader(csvFile))) {
            String line;
            while ( (line=br.readLine()) != null)
            {
             String[] st = line.split(";"); 
             String[] SName = st[0].toString().split("[:]");
             String ShortName = SName[0];
                         
             String sql;

             sql = "insert into serverlist values('"+st[0]+"','"+ShortName+"')";
             System.out.println(st[0]);
             selectdb.write(sql);
            }
        }
            catch (IOException ex) {          
                Logger.getLogger(Recon.class.getName()).log(Level.SEVERE, null, ex);
            }          
        }
    }//GEN-LAST:event_ImpFailedActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
                String index = (String) jList1.getSelectedValue();
        	String sql = "SELECT * FROM serverdetails WHERE servername = '"+ index +"'";
        	ResultSet res = null;
        	try {
            	res = selectdb.read(sql);
        	} catch (SQLException | ClassNotFoundException ex) {
            	Logger.getLogger(Recon.class.getName()).log(Level.SEVERE, null, ex);
        	}
        	try {
           	while(res.next())
            	{
                Fservername.setText(res.getString("servername"));
                Furl.setText(res.getString("url"));
                Fowner.setText(res.getString("mail"));
                Fkey.setText(res.getString("erposixpkfile"));
                Ftype.setText(res.getString("objectclass"));
                Fusers.setText(res.getString("users"));
                Forphan.setText(res.getString("orphans"));
                Fcbn.setText(res.getString("cbn"));
                Fpcbn.setText(res.getString("privcbn"));
                Ferror.setText(res.getString("errormsg"));
                Frecon.setText(res.getString("lastrecon"));    
                                
                String Sname = res.getString("servername"); 
                String[] SName = res.getString("servername").toString().split("[:]");
                String ShortName = SName[0];
                String sq = "SELECT description FROM customerlist WHERE shortname = '"+ ShortName +"'";
                    ResultSet rs = null;
                    try {
                    rs = selectdb.read(sq);
                        while(rs.next())
                        {
                        Fcname.setText(rs.getString("description")); 
                        }
                    } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(Recon.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
                
            	}
        	} catch (SQLException ex) {
            	Logger.getLogger(Recon.class.getName()).log(Level.SEVERE, null, ex);
        	}
    }//GEN-LAST:event_jList1MouseClicked

    private void SelectShortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectShortActionPerformed
                SelectServer.removeAllItems();
                String index = (String) SelectShort.getSelectedItem();
                String sq = "select servername from serverdetails where SUBSTR(servername,1,3) ='"+ index +"'";
                    ResultSet rs = null;
                    try {
                    rs = selectdb.read(sq);
                        while(rs.next())
                        {
                        String svname = rs.getString("servername"); 
                        SelectServer.addItem(svname);
                        }
                    } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(Recon.class.getName()).log(Level.SEVERE, null, ex);
                    }
    }//GEN-LAST:event_SelectShortActionPerformed

    private void SelectServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectServerActionPerformed
       		String index = (String) SelectServer.getSelectedItem();
        	String sql = "SELECT * FROM serverdetails WHERE servername = '"+ index +"'";
        	ResultSet res = null;
        	try {
            	res = selectdb.read(sql);
        	} catch (SQLException | ClassNotFoundException ex) {
            	Logger.getLogger(Recon.class.getName()).log(Level.SEVERE, null, ex);
        	}
        	try {
           	while(res.next())
            	{
                Fservername.setText(res.getString("servername"));
                Furl.setText(res.getString("url"));
                Fowner.setText(res.getString("mail"));
                Fkey.setText(res.getString("erposixpkfile"));
                Ftype.setText(res.getString("objectclass"));
                Fusers.setText(res.getString("users"));
                Forphan.setText(res.getString("orphans"));
                Fcbn.setText(res.getString("cbn"));
                Fpcbn.setText(res.getString("privcbn"));
                Ferror.setText(res.getString("errormsg"));
                Frecon.setText(res.getString("lastrecon"));    
                                
                String Sname = res.getString("servername"); 
                String[] SName = res.getString("servername").toString().split("[:]");
                String ShortName = SName[0];
                String sq = "SELECT description FROM customerlist WHERE shortname = '"+ ShortName +"'";
                    ResultSet rs = null;
                    try {
                    rs = selectdb.read(sq);
                        while(rs.next())
                        {
                        Fcname.setText(rs.getString("description")); 
                        }
                    } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(Recon.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
                
            	}
        	} catch (SQLException ex) {
            	Logger.getLogger(Recon.class.getName()).log(Level.SEVERE, null, ex);
        	}
    }//GEN-LAST:event_SelectServerActionPerformed

    private void FownerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FownerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FownerActionPerformed

    private void FillSelectShort(){
    String sq = "select SUBSTR(servername,1,3) from serverdetails";
        ResultSet rs = null;
                    try {
                    rs = selectdb.read(sq);
                        while(rs.next())
                        {
                        String shname = rs.getString(1); 
                        SelectShort.addItem(shname);
                        }
                    } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(Recon.class.getName()).log(Level.SEVERE, null, ex);
                    }
    }
    

    private void FillListBox(){
        DefaultListModel listModel = new DefaultListModel();

        String sql = "SELECT servername FROM serverdetails ";
        ResultSet res = null;
        try {
            res = selectdb.read(sql);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Recon.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            while(res.next())
            {
                listModel.addElement(res.getString("servername"));
            }
            jList1.setModel(listModel);
        } catch (SQLException ex) {
            Logger.getLogger(Recon.class.getName()).log(Level.SEVERE, null, ex);
        } 
       
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        pre.main(args);
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Fcbn;
    private javax.swing.JTextField Fcname;
    private javax.swing.JTextArea Ferror;
    private javax.swing.JTextField Fkey;
    private javax.swing.JTextField Forphan;
    private javax.swing.JTextField Fowner;
    private javax.swing.JTextField Fpcbn;
    private javax.swing.JTextField Frecon;
    private javax.swing.JTextField Fservername;
    private javax.swing.JTextField Ftype;
    private javax.swing.JTextField Furl;
    private javax.swing.JTextField Fusers;
    private javax.swing.JMenuItem ImpCust;
    private javax.swing.JMenuItem ImpFailed;
    private javax.swing.JLabel Lcbn;
    private javax.swing.JLabel Lcname;
    private javax.swing.JLabel Lerror;
    private javax.swing.JLabel Lkey;
    private javax.swing.JLabel Lorphan;
    private javax.swing.JLabel Lowner;
    private javax.swing.JLabel Lpcbn;
    private javax.swing.JLabel Lrecon;
    private javax.swing.JLabel Lservername;
    private javax.swing.JLabel Ltype;
    private javax.swing.JLabel Lurl;
    private javax.swing.JLabel Lusers;
    private javax.swing.JComboBox SelectServer;
    private javax.swing.JComboBox SelectShort;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
