package arduino;

import gnu.io.CommPortIdentifier;
import gnu.io.NoSuchPortException;
import gnu.io.PortInUseException;
import gnu.io.SerialPort;
import gnu.io.UnsupportedCommOperationException;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;


public class Remote extends javax.swing.JFrame {
    
 public static SerialPort serialPort;
 
 private static final String PORT_NAME = "/dev/ttyACM0";
 public static final int TIME_OUT = 2000;
 public static final int DATA_RATE = 9600;
 
 public static BufferedReader input;
 public static OutputStream output; 
 private int data;
 
 int speed, yaw, pitch, roll;
 int m1, m2, m3, m4;
 
 
  public void initialize() throws NoSuchPortException, PortInUseException {
 CommPortIdentifier portId = CommPortIdentifier.getPortIdentifier(PORT_NAME);
 
try {
 serialPort = (SerialPort) portId.open(PORT_NAME, TIME_OUT);
 serialPort.setSerialPortParams(DATA_RATE,8,1,0);

 input = new BufferedReader(new InputStreamReader(serialPort.getInputStream()));
 output = serialPort.getOutputStream();

} catch (PortInUseException | UnsupportedCommOperationException | IOException e) {
 System.err.println(e.toString());
 }
 }
  
    public Remote() {
        initComponents();
     try {
         initialize();
     } catch (NoSuchPortException ex) {
         Logger.getLogger(Remote.class.getName()).log(Level.SEVERE, null, ex);
     } catch (PortInUseException ex) {
         Logger.getLogger(Remote.class.getName()).log(Level.SEVERE, null, ex);
     }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RollSlider = new javax.swing.JSlider();
        YawSlider = new javax.swing.JSlider();
        PitchSlider = new javax.swing.JSlider();
        SpeedSlider = new javax.swing.JSlider();
        Speed = new javax.swing.JLabel();
        Yaw = new javax.swing.JLabel();
        Roll = new javax.swing.JLabel();
        Pitch = new javax.swing.JLabel();
        speedField = new javax.swing.JTextField();
        yawField = new javax.swing.JTextField();
        rollField = new javax.swing.JTextField();
        pitchField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(450, 349));
        setResizable(false);

        RollSlider.setMaximum(180);
        RollSlider.setValue(90);
        RollSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                RollSliderStateChanged(evt);
            }
        });

        YawSlider.setMaximum(180);
        YawSlider.setValue(90);
        YawSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                YawSliderStateChanged(evt);
            }
        });

        PitchSlider.setMaximum(180);
        PitchSlider.setOrientation(javax.swing.JSlider.VERTICAL);
        PitchSlider.setValue(90);
        PitchSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PitchSliderStateChanged(evt);
            }
        });

        SpeedSlider.setMaximum(180);
        SpeedSlider.setOrientation(javax.swing.JSlider.VERTICAL);
        SpeedSlider.setPaintLabels(true);
        SpeedSlider.setValue(0);
        SpeedSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpeedSliderStateChanged(evt);
            }
        });

        Speed.setText("Speed");

        Yaw.setText("Yaw");

        Roll.setText("Roll");

        Pitch.setText("Pitch");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(PitchSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(177, 177, 177)
                .addComponent(SpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(Roll)
                                .addGap(71, 71, 71))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(rollField, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Pitch)
                            .addComponent(pitchField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(speedField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(yawField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(Speed)
                                .addGap(61, 61, 61)
                                .addComponent(Yaw))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(RollSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(YawSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {pitchField, rollField, speedField, yawField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PitchSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RollSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(YawSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Roll)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Speed)
                        .addComponent(Pitch))
                    .addComponent(Yaw))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rollField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pitchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(speedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yawField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SpeedSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpeedSliderStateChanged
        speed=SpeedSlider.getValue() & 0xff; 
        speedField.setText(String.valueOf(speed));
         try {
            output.write(speed);
            } catch (IOException e) {
            }
    }//GEN-LAST:event_SpeedSliderStateChanged

    private void YawSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_YawSliderStateChanged
        yaw=YawSlider.getValue() & 0xff; 
        yawField.setText(String.valueOf(yaw));
         try {
            output.write(yaw);
            } catch (IOException e) {
            }
    }//GEN-LAST:event_YawSliderStateChanged

    private void PitchSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_PitchSliderStateChanged
        pitch=PitchSlider.getValue() & 0xff; 
        pitchField.setText(String.valueOf(pitch));
         try {
            output.write(pitch);
            } catch (IOException e) {
            }
    }//GEN-LAST:event_PitchSliderStateChanged

    private void RollSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_RollSliderStateChanged
        roll=RollSlider.getValue() & 0xff;
        rollField.setText(String.valueOf(roll));
         try {
            output.write(roll);
            } catch (IOException e) {
            }
    }//GEN-LAST:event_RollSliderStateChanged

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Remote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Remote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Remote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Remote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Remote().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Pitch;
    private javax.swing.JSlider PitchSlider;
    private javax.swing.JLabel Roll;
    private javax.swing.JSlider RollSlider;
    private javax.swing.JLabel Speed;
    private javax.swing.JSlider SpeedSlider;
    private javax.swing.JLabel Yaw;
    private javax.swing.JSlider YawSlider;
    private javax.swing.JTextField pitchField;
    private javax.swing.JTextField rollField;
    private javax.swing.JTextField speedField;
    private javax.swing.JTextField yawField;
    // End of variables declaration//GEN-END:variables
}
